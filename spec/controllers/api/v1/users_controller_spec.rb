require 'rails_helper'

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to specify the controller code that
# was generated by Rails when you ran the scaffold generator.
#
# It assumes that the implementation code is generated by the rails scaffold
# generator.  If you are using any extension libraries to generate different
# controller code, this generated spec may or may not pass.
#
# It only uses APIs available in rails and/or rspec-rails.  There are a number
# of tools you can use to make these specs even more expressive, but we're
# sticking to rails and rspec-rails APIs to keep things simple and stable.
#
# Compared to earlier versions of this generator, there is very limited use of
# stubs and message expectations in this spec.  Stubs are only used when there
# is no simpler way to get a handle on the object needed for the example.
# Message expectations are only used when there is no simpler way to specify
# that an instance is receiving a specific message.

RSpec.describe Api::V1::UsersController, type: :controller do

  describe "GET #index" do
    it "Get all users" do
      FactoryGirl.create_list(:user, 10)

      get :index, params: {}

      expect(response).to be_success
      expect(response.body).to look_like_json

      expect(body_as_json.length).to eq(10)
      # expect(body_as_json).to match()
    end
  end

  describe "GET #show" do
    it "Get a single user" do
      user = FactoryGirl.create(:user)

      get :show, params: {id: user.id}

      expect(response).to be_success
      expect(response.body).to look_like_json

      expect(body_as_json).to match({
        "id" => user.id,
        "name" => user.name,
        "email" => user.email,
      })
    end
  end

end
